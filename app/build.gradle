apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.

def gitVersionCode(){
    def cmd = 'git rev-list HEAD --first-parent --count'
    def versionCode =cmd.execute().text.trim().toInteger()
    println versionCode+''
    return versionCode
}
def gitVersionTag(){
    //def cmd = 'git tag'
    def cmd = 'git describe --tags'
    def version =cmd.execute().text.trim()
    def pattern =/-/
    def matcher =version=~pattern
    if (matcher){
        version =version.substring(0,matcher.start())
    }
    /*
    def pattern = "-(\\d+)-g"
    def matcher =version=~pattern
    if (matcher){
        version =version.substring(0,matcher.start())+"."+matcher[0][1]
    } else {
        version=version+".0"
    }
    */
    //logger.debug(version)
    println version+''
    return version
    //return 'v0.0.0' // is true when remote is v0.0.1
    //return 'v0.0.0.1' // is true when remote is v0.0.1
    //return 'v0.0.0.9' //is true r v0.0.1
    //return 'v0.0.1' //is false r v0.0.1
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties;
def keyStoreFile;
if (keystorePropertiesFile.exists()) {

    // Initialize a new Properties() object called keystoreProperties.
    keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    keyStoreFile = file(keystoreProperties['storeFileLocal'])

// 判断是位于本地还是CI服务器
    if (!keyStoreFile.exists()){
        keyStoreFile = file(keystoreProperties['storeFileCI'])
    }

}
    android {
        if (keystorePropertiesFile.exists()) {
            signingConfigs {
                release {
                    keyAlias keystoreProperties['keyAlias']
                    keyPassword keystoreProperties['keyPwd']
                    storeFile keyStoreFile
                    storePassword keystoreProperties['storePwd']
                }
            }
        }
        compileSdkVersion 28
        compileOptions {
            targetCompatibility = "8"
            sourceCompatibility = "8"
        }
        defaultConfig {
            applicationId "com.sherylynn.pdf_all"
            minSdkVersion 15
            targetSdkVersion 28
            versionCode gitVersionCode()
            versionName gitVersionTag()
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }
        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                if (keystorePropertiesFile.exists()) {
                    signingConfig signingConfigs.release
                }
            }
        }
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def mergedFlavoer =variant.mergedFlavor
                if (variant.buildType.name.equals('release')){
                    //mergedFlavoer.versionCode = 
                    //mergedFlavoer.versionName = 
                }
            }
        }
    }
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.squareup.okhttp3:okhttp:3.14.1'
    implementation 'com.github.barteksc:android-pdf-viewer:3.1.0-beta.1'
    implementation 'com.blankj:utilcode:1.23.7'
    implementation 'com.alibaba:fastjson:1.1.71.android'
    implementation 'com.github.javiersantos:AppUpdater:2.7'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}
